2. Question 2

There are n computer systems connected together to form a network. The network can be represented as a rooted tree (rooted at master computer 1), where the connections are described using two arrays connect_from[] and connect_to[]. Each pair (connect_from[i], connect_to[i]) denotes an undirected edge between the two computers. Additionally, each computer has a value assigned to it denoted by the array computer_val[].

In order to maximize the throughput of the network, certain inefficient systems can be removed. In one operation, any computer node can be chosen, and all computer nodes in its subtree including this node can be removed from the network. Let the number of such operations applied be num_ops.

For a given parameter k, the efficiency of the network after num_ops operations is calculated as: (sum of values of all remaining computer nodesk num_ops). Find the maximum possible efficiency after applying some (possibly zero) operations optimally.

Note: The node values can be negative.

Example

Consider the number of computers to be connect nodes = 4, and their connections to be connect from = [1, 2, 3], connect_to= [2, 3, 4). Also, consider the node values to be computer_val = [3, -7, -8, -9] and the given parameter to be k = 5. The given network can be represented as:

it is optimal to remove the subtree rooted at node 2. Then, efficiency=3-(15)=-2, which is the maximum possible.

Hence, the answer is -2.

Function Description

Complete the function getMaximumEfficiency in the editor below.

getMaximum Efficiency has the following parameters:

int connect_nodes, the number of nodes in the system int connect_from[connect_nodes-1): one node of the connecting edges int connect_to[connect_nodes-1]; the other node of the connecting edges int computer_val[connect_nodes]: the values of each computer node int k: the parameter for calculating efficiency

Returns

long int the maximum possible efficiency after an optimal number of operations

Constraints

2≤ connect nodes ≤ 105

1s connect from[i], connect_to[i]s connect_nodes

|computer_val[i]/ ≤109

1≤k≤109

The first line contains two space-separated integers, connect_nodes, the number of nodes in the tree, and connect_nodes - 1, the size of the arrays connect_from[] and connect to[].

Each line i of the (connect_nodes-1) subsequent lines (where 0 <= i < i connect_nodes - 1) contains 2 integers, connect_from[i] and connect_to[i] that denotes the r ^ (th) edge of the tree.

The next line contains an integer, connect_nodes, that denotes the number of elements in the array computer_val[].

Each line i of the connect_nodes subsequent lines (where 0 <= i < 1 connect_nodes) contains an integer that denotes computer_val[i].

eter for calculating The last line contains an integer, k, that denotes the given parameter

efficiency.

▼Sample Case 0

Sample Input For Custom Testing

STDIN

32

12

FUNCTION

connect_nodes 3, (connect_nodes 1) = 2 connect_from = [1, 3] , connect_to = [2, 2]

32 330 9 133 -1

connect_nodes = 3 computer_val [9, -1, 3]
k = 3
Sample Output

11
